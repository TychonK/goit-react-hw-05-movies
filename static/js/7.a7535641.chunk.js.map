{"version":3,"sources":["components/MovieDetailsPage.js"],"names":["Cast","lazy","Reviews","MovieDetailsPage","movieId","useParams","useState","movieInfo","setMovieInfo","url","useRouteMatch","history","useHistory","useEffect","axios","get","then","res","data","type","onClick","goBack","className","width","src","poster_path","title","release_date","vote_average","overview","genres","map","genre","index","name","to","fallback","path"],"mappings":"yPAUMA,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAEZ,SAASE,IACpB,IAAQC,EAAYC,cAAZD,QACR,EAAkCE,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACQC,EAAQC,cAARD,IACFE,EAAUC,cAEhBC,qBAAU,WACNC,IAAMC,IAAN,6CAAgDX,EAAhD,6DACKY,MAAK,SAACC,GAAU,OAAOA,EAAIC,QAC3BF,MAAK,SAACE,GACHV,EAAaU,QAEtB,IAMH,OACI,qCACI,wBAAQC,KAAK,SAASC,QANT,WACjBT,EAAQU,UAKyCC,UAAU,wBAAvD,4BAGA,sBAAKA,UAAU,SAAf,UACI,qBAAKC,MAAM,MAAMC,IAAG,8CAAyCjB,EAAUkB,eACvE,gCACJ,+BAAKlB,EAAUmB,MAAf,KAAwBnB,EAAUoB,aAAlC,OACA,6CAAgBpB,EAAUqB,gBAC1B,0CACA,4BAAIrB,EAAUsB,WACd,wCACA,oBAAIP,UAAU,mCAAd,SACKf,EAAUuB,QAAUvB,EAAUuB,OAAOC,KAAI,SAACC,EAAOC,GAC9C,OACI,oBAAgBX,UAAU,kBAA1B,SAA8CU,EAAME,MAA3CD,cAMrB,uBACA,wDACA,+BACI,6BACI,cAAC,IAAD,CAAME,GAAE,UAAK1B,EAAL,SAAR,mBADI,KAGR,6BACI,cAAC,IAAD,CAAM0B,GAAE,UAAK1B,EAAL,YAAR,sBADI,QAIZ,uBACA,eAAC,WAAD,CAAU2B,SAAU,cAAC,IAAD,IAApB,UACI,cAAC,IAAD,CAAOC,KAAK,wBAAZ,SACI,cAACrC,EAAD,MAEJ,cAAC,IAAD,CAAOqC,KAAK,2BAAZ,SACI,cAACnC,EAAD","file":"static/js/7.a7535641.chunk.js","sourcesContent":["import { useParams, Link, useRouteMatch, useHistory } from 'react-router-dom'\r\nimport { useEffect, useState, lazy, Suspense } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Route } from \"react-router-dom\"\r\n\r\nimport Loader from \"./Loader\"\r\n// import Cast from './Cast'\r\n// import Reviews from './Reviews'\r\n\r\nconst Cast = lazy(() => import(\"./Cast\"))\r\nconst Reviews = lazy(() => import(\"./Reviews\"))\r\n\r\nexport default function MovieDetailsPage() {\r\n    const { movieId } = useParams();\r\n    const [movieInfo, setMovieInfo] = useState({});\r\n    const { url } = useRouteMatch();\r\n    const history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=42eba2050345b62282020883d06ba519&language=en-US`)\r\n            .then((res) => { return res.data })\r\n            .then((data) => {\r\n                setMovieInfo(data)\r\n            })\r\n    }, [])\r\n\r\n    const handleGoBack = () => {\r\n        history.goBack()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" onClick={handleGoBack} className=\"btn btn-primary hBack\">\r\n              &larr; Go back \r\n        </button>\r\n            <div className=\"poster\">\r\n                <img width=\"25%\" src={`https://image.tmdb.org/t/p/original/${movieInfo.poster_path}`}></img>\r\n                <div>\r\n            <h2>{movieInfo.title} ({movieInfo.release_date})</h2>\r\n            <p>User score: {movieInfo.vote_average}</p>\r\n            <h2>Overview</h2>\r\n            <p>{movieInfo.overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul className=\"list-group list-group-horizontal\">\r\n                {movieInfo.genres && movieInfo.genres.map((genre, index) => {\r\n                    return (\r\n                        <li key={index} className=\"list-group-item\">{ genre.name }</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            </div>\r\n            </div>\r\n            <hr />\r\n            <h4>Additional information</h4>\r\n            <ul>\r\n                <li key=\"1\">\r\n                    <Link to={`${url}/cast`}>Cast</Link>\r\n                </li>\r\n                <li key=\"2\">\r\n                    <Link to={`${url}/reviews`}>Reviews</Link>\r\n                </li>\r\n            </ul>\r\n            <hr />\r\n            <Suspense fallback={<Loader/>}>\r\n                <Route path=\"/movies/:movieId/cast\">\r\n                    <Cast/>\r\n                </Route>\r\n                <Route path=\"/movies/:movieId/reviews\">\r\n                    <Reviews/>\r\n                </Route>\r\n            </Suspense>\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}